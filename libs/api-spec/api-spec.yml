openapi: 3.0.0
x-stoplight:
  id: 54psv4pd3ezr9
info:
  title: clinic-backend-api
  version: '1.0'
  description: REST API for clinic management system.
  license:
    name: MIT
  contact:
    name: Hamdan YM Wijaya
    email: yuwafi.hamdan365@gmail.com
servers:
  - url: 'http://localhost:8000'
    description: Local Dev API
  - url: 'https://api.capstone.thisham.my.id'
    description: Deployed API
tags:
  - name: Admin
  - name: Authentication
  - name: Dashboard
  - name: Doctor
  - name: ICD10
  - name: Medical Record
  - name: Prescription
  - name: Nurse
  - name: Patient
  - name: Polyclinic
  - name: Queue
paths:
  '/dashboards/{feature}':
    get:
      parameters:
        - schema:
            type: string
            enum:
              - doctor
              - nurse
              - patient
              - polyclinic
              - queue
          name: feature
          in: path
          required: true
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
      summary: Get Total Feature Data
      operationId: get-dashboard
      responses:
        '200':
          $ref: '#/components/responses/200_Dashboard'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      tags:
        - Dashboard
  /patients:
    post:
      summary: Create New Patient
      operationId: post-user
      responses:
        '201':
          $ref: '#/components/responses/201_CreatePatient'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      description: Create a new user.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
      requestBody:
        $ref: '#/components/requestBodies/NewPatient'
      tags:
        - Patient
    parameters: []
    get:
      summary: Get All Patient
      operationId: get-patients
      responses:
        '200':
          $ref: '#/components/responses/200_PatientList'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
      tags:
        - Patient
      description: ''
  '/patients/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get a Patient by ID
      tags:
        - Patient
      responses:
        '200':
          $ref: '#/components/responses/200_PatientDetail'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      operationId: get-patients-id
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
    put:
      summary: Update Patient by ID
      operationId: put-patients-id
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      tags:
        - Patient
      requestBody:
        $ref: '#/components/requestBodies/ExistingPatient'
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
    delete:
      summary: Delete Patient by ID
      operationId: delete-patients-id
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      tags:
        - Patient
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
  /polyclinics:
    get:
      summary: Get All Polyclinics
      tags:
        - Polyclinic
      responses:
        '200':
          $ref: '#/components/responses/200_PolyclinicList'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      operationId: get-polyclinics
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
    post:
      summary: Create Polyclinic
      operationId: post-polyclinics
      responses:
        '201':
          $ref: '#/components/responses/201_CreatePolyclinic'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      tags:
        - Polyclinic
      requestBody:
        $ref: '#/components/requestBodies/NewPolyclinic'
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
  '/polyclinics/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Polyclinic By ID
      tags:
        - Polyclinic
      responses:
        '200':
          $ref: '#/components/responses/200_PolyclinicDetail'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      operationId: get-polyclinics-id
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
    put:
      summary: Update Polyclinic by ID
      operationId: put-polyclinics-id
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      requestBody:
        $ref: '#/components/requestBodies/ExistingPolyclinic'
      tags:
        - Polyclinic
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
    delete:
      summary: Delete Polyclinic by ID
      operationId: delete-polyclinics-id
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      tags:
        - Polyclinic
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
  /login:
    post:
      summary: Login
      operationId: post-login
      responses:
        '201':
          description: Created
          headers:
            Set-Cookie:
              schema:
                type: string
              description: 'token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTk3NTA0NzMsImp0aSI6ImFhYWExMTExLTIyMjItMzMzMy00NDQ0LTU1NTU2NjY2Nzc3NyIsIlJvbGUiOiJBRE1JTiJ9.fBpw9STXY2uAiB2fluzsKh3ex-mPeQqj_RFx2Rhf878; Path=/; Expires=Sat, 06 Aug 2022 01:47:53 GMT; HttpOnly'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Meta_201Created'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Login'
              examples: {}
      description: ''
      requestBody:
        $ref: '#/components/requestBodies/Login'
      tags:
        - Authentication
  /doctors:
    get:
      summary: Get All Doctors
      tags:
        - Doctor
      responses:
        '200':
          $ref: '#/components/responses/200_DoctorList'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      operationId: get-doctors
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
        - schema:
            type: string
          in: query
          name: polyclinic
          description: Get by polyclinic id
          example: '1'
    post:
      summary: Create Doctor
      operationId: post-doctors
      responses:
        '201':
          $ref: '#/components/responses/201_CreateDoctor'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      requestBody:
        $ref: '#/components/requestBodies/NewDoctor'
      tags:
        - Doctor
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
  '/doctors/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Doctor By ID
      tags:
        - Doctor
      responses:
        '200':
          $ref: '#/components/responses/200_DoctorDetail'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      operationId: get-doctors-id
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
    put:
      summary: Update Doctor by ID
      operationId: put-doctors-id
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      requestBody:
        $ref: '#/components/requestBodies/ExistingDoctor'
      tags:
        - Doctor
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
    delete:
      summary: Delete Doctor by ID
      operationId: delete-doctors-id
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      tags:
        - Doctor
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
  /nurses:
    get:
      summary: Get All Nurses
      tags:
        - Nurse
      responses:
        '200':
          $ref: '#/components/responses/200_NurseList'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      operationId: get-nurses
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
        - schema:
            type: string
          in: query
          name: polyclinic
          description: Get by polyclinic id
          example: '1'
    post:
      summary: Create Nurse
      operationId: post-nurses
      responses:
        '201':
          $ref: '#/components/responses/201_CreateNurse'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      requestBody:
        $ref: '#/components/requestBodies/NewNurse'
      tags:
        - Nurse
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
    parameters: []
  '/nurses/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Nurse By ID
      tags:
        - Nurse
      responses:
        '200':
          $ref: '#/components/responses/200_NurseDetail'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      operationId: get-nurses-id
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
    put:
      summary: Update Nurse by ID
      operationId: put-nurses-id
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      requestBody:
        $ref: '#/components/requestBodies/ExistingNurse'
      description: ''
      tags:
        - Nurse
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
    delete:
      summary: Delete Nurse by ID
      operationId: delete-nurses-id
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      tags:
        - Nurse
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
  /admins:
    get:
      summary: Get All Admins
      tags:
        - Admin
      responses:
        '200':
          $ref: '#/components/responses/200_AdminList'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      operationId: get-admins
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
    post:
      summary: Create Admin
      operationId: post-admins
      responses:
        '201':
          $ref: '#/components/responses/201_CreateAdmin'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      requestBody:
        $ref: '#/components/requestBodies/NewAdmin'
      tags:
        - Admin
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
    parameters: []
  '/admins/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Admin By ID
      tags:
        - Admin
      responses:
        '200':
          $ref: '#/components/responses/200_AdminDetail'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      operationId: get-admins-id
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
    put:
      summary: Update Admin by ID
      operationId: put-admins-id
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      requestBody:
        $ref: '#/components/requestBodies/ExistingAdmin'
      tags:
        - Admin
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
    delete:
      summary: Delete Admin by ID
      operationId: delete-admins-id
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      tags:
        - Admin
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
  /queues:
    get:
      summary: Get All Queue
      tags:
        - Queue
      responses:
        '200':
          $ref: '#/components/responses/200_QueueList'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      operationId: get-queues
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
        - schema:
            type: string
          in: query
          name: polyclinic
          description: Get by polyclinic id
          example: '1'
        - schema:
            type: string
          in: query
          name: from-date
          description: Get from date to latest
          example: '2021-06-14'
    post:
      summary: Create New Queue
      operationId: post-queues
      responses:
        '201':
          $ref: '#/components/responses/201_CreateQueue'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      tags:
        - Queue
      requestBody:
        $ref: '#/components/requestBodies/NewQueue'
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
  '/queues/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: Update Queue by ID
      operationId: put-queues-id
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      tags:
        - Queue
      requestBody:
        $ref: '#/components/requestBodies/ExistingQueue'
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
    delete:
      summary: Delete Queue by ID
      tags:
        - Queue
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      operationId: delete-queues-id
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
  '/icd10/{code}':
    parameters:
      - schema:
          type: string
        name: code
        in: path
        required: true
    get:
      summary: Get ICD10 by code
      tags:
        - ICD10
      responses:
        '200':
          $ref: '#/components/responses/200_ICD10List'
        '400':
          $ref: '#/components/responses/400_ICD10BadRequest'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      operationId: get-icd10-code
  '/medical-records/patient/id/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Medical Record List by patient ID lookup
      tags:
        - Medical Record
      responses:
        '200':
          $ref: '#/components/responses/200_MedicalRecordList'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      operationId: get-medical-records-patient-id
      description: Get list of medical record based on patient ID.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
          required: true
  '/medical-records/patient/nik/{nik}':
    parameters:
      - schema:
          type: string
        name: nik
        in: path
        required: true
    get:
      summary: Medical Record List by NIK Lookup
      tags:
        - Medical Record
      responses:
        '200':
          $ref: '#/components/responses/200_MedicalRecordList'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      operationId: get-medical-records-patient-nik
      description: Get list of medical record based on patient NIK.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
          required: true
  '/medical-records/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Medical Record Detail by ID Lookup
      tags:
        - Medical Record
      responses:
        '200':
          $ref: '#/components/responses/200_MedicalRecordDetail'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      operationId: get-medical-records-id
      description: Medical Record details with id of medical record.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
          required: true
    put:
      summary: Medical Record Update by ID Lookup
      operationId: put-medical-records-id
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      requestBody:
        $ref: '#/components/requestBodies/ExistingMedicalRecord'
      tags:
        - Medical Record
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
          required: true
    delete:
      summary: Medical Record Delete by ID Lookup
      operationId: delete-medical-records-id
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      tags:
        - Medical Record
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
  /medical-records:
    post:
      summary: Add Medical Record
      operationId: post-medical-records
      responses:
        '201':
          $ref: '#/components/responses/201_CreateMedicalRecord'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
      tags:
        - Medical Record
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
          required: true
      description: Create medical record by doctor.
      requestBody:
        $ref: '#/components/requestBodies/NewMedicalRecord'
  '/prescriptions/medical-record/{id}':
    get:
      summary: Prescription by medical record ID lookup
      operationId: get-prescriptions-medical-record-id
      tags:
        - Prescription
      parameters:
        - schema:
            type: string
          in: path
          name: id
          required: true
      responses:
        '200':
          $ref: '#/components/responses/200_Prescription'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
  '/prescriptions/{id}':
    parameters:
      - schema:
          type: string
        in: header
        name: Authorization
        description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
        required: true
      - schema:
          type: string
        in: path
        name: id
        required: true
    put:
      summary: Update Prescription by ID
      operationId: put-prescriptions-id
      tags:
        - Prescription
      requestBody:
        $ref: '#/components/requestBodies/ExistingPrescription'
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
    delete:
      summary: Delete prescription by ID
      operationId: delete-prescription-id
      tags:
        - Prescription
      responses:
        '204':
          $ref: '#/components/responses/204_NoContent'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
  /prescriptions:
    post:
      summary: Add Prescription
      operationId: post-prescriptions
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY5MTUyMjQsImp0aSI6IjhkMDFlZGY5LTcyY2EtNDBiNC1hMWRkLTIwYjYxNGQ1OTdlNyIsIm5hbWUiOiJkci4gQ2Fwc3RvbmUgWCIsIm5pcCI6IjIwMTUgMDI4MTcxIDQ1Iiwicm9sZSI6IkRPQ1RPUiJ9.Nc9UNKO4fspncl0XYEOGIXYyZMfiVenWiS4tP_lf-fo
          required: true
      tags:
        - Prescription
      requestBody:
        $ref: '#/components/requestBodies/NewPrescription'
      responses:
        '201':
          $ref: '#/components/responses/201_CreatePrescription'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '403':
          $ref: '#/components/responses/403_Forbidden'
        '500':
          $ref: '#/components/responses/500_InternalServerError'
components:
  schemas:
    Login:
      title: Login
      x-stoplight:
        id: z16khy9t78dxb
      type: object
      description: Login user response.
      properties:
        token:
          type: string
        role:
          type: string
      x-examples:
        doctor:
          token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTk3NTAxMzUsImp0aSI6ImFhYWExMTExLTIyMjItMzMzMy00NDQ0LTU1NTU2NjY2Nzc3NyIsIlJvbGUiOiJET0NUT1IifQ.Mita6OpkSbuVyHoVjEhO8qHQF86U7-NQTir1BIH56oE
          role: DOCTOR
        nurse:
          token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTk3NTAyNTAsImp0aSI6ImFhYWExMTExLTIyMjItMzMzMy00NDQ0LTU1NTU2NjY2Nzc3NyIsIlJvbGUiOiJOVVJTRSJ9.xLX97s0Ye6oVk-MNwGGU2_kgaE7hapFVbWKqro_rPRk
          role: NURSE
        admin:
          token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTk3NTA0NzMsImp0aSI6ImFhYWExMTExLTIyMjItMzMzMy00NDQ0LTU1NTU2NjY2Nzc3NyIsIlJvbGUiOiJBRE1JTiJ9.fBpw9STXY2uAiB2fluzsKh3ex-mPeQqj_RFx2Rhf878
          role: ADMIN
    Meta_200OK:
      title: Meta_200OK
      x-stoplight:
        id: vek7yruai96l9
      type: object
      description: Response meta of http code 200.
      properties:
        meta:
          type: object
          properties:
            code:
              type: integer
              example: 200
            message:
              type: string
              example: OK
    Meta_201Created:
      title: Meta_201Created
      x-stoplight:
        id: fjrxtttuyix4n
      type: object
      description: Response meta when created a new data.
      properties:
        meta:
          type: object
          properties:
            code:
              type: number
              example: 201
            message:
              type: string
              example: Created
    Meta_204NoContent:
      type: object
      properties:
        meta:
          type: object
          properties:
            code:
              type: integer
              example: 204
            message:
              type: string
              example: No Content
    Meta_400BadRequest:
      title: Meta_400BadRequest
      x-stoplight:
        id: a4p7jfz6o738r
      type: object
      properties:
        meta:
          type: object
          properties:
            code:
              type: number
              example: 400
            message:
              type: string
              example: Bad Request
      description: Response when backend received invalid data.
    Meta_401Unauthorized:
      title: Meta_401Unauthorized
      x-stoplight:
        id: zonmj95h5k1mw
      type: object
      properties:
        meta:
          type: object
          properties:
            code:
              type: number
              example: 401
            message:
              type: string
              example: Unauthorized
      description: Response when accessed endpoint with no authentication.
    Meta_403Forbidden:
      title: Meta_403Forbidden
      x-stoplight:
        id: 0xuw3a3xqut3q
      type: object
      properties:
        meta:
          type: object
          properties:
            code:
              type: number
              example: 403
            message:
              type: string
              example: Forbidden
      description: Meta given when accessed endpoint with no authority.
    Meta_404NotFound:
      title: Meta_404NotFound
      x-stoplight:
        id: rhymnmchgv3cw
      type: object
      properties:
        meta:
          type: object
          properties:
            code:
              type: number
              example: 404
            message:
              type: string
              example: Not Found
      description: Meta given when accessed imaginary data.
    Meta_500InternalServerError:
      title: Meta_500InternalServerError
      x-stoplight:
        id: 6c2cgvq65j5dn
      type: object
      properties:
        meta:
          type: object
          properties:
            code:
              type: number
              example: 500
            message:
              type: string
              example: Internal Server Error
      description: Meta given when accessed endpoint getting error on server.
    Meta_501Unimplemented:
      title: Meta_501Unimplemented
      x-stoplight:
        id: z2sunlscou5yl
      type: object
      properties:
        meta:
          type: object
          properties:
            code:
              type: number
              example: 501
            message:
              type: string
              example: Unimplemented
      description: Meta given when accessing imaginary endpoint(s).
    Patient:
      title: Patient
      type: object
      description: 'Patient response, contained completed data without database log timestamps.'
      x-examples:
        alice-calbert:
          id: aaaa1111-2222-3333-4444-55556666aaa1
          name: Alice Calbert
          nik: '1035017110970001'
          phone: 2312312
          address: 'North Way Street, Antartica Regency'
          dob: '1997-10-31'
          gender: FEMALE
          blood_type: A+
        ken-schweightner:
          id: aaaa1111-2222-3333-4444-55556666aaa2
          name: Ken Schwegihtner
          nik: '1035013110970002'
          phone: 62292191
          address: 'North Way Street, Antartica Regency'
          dob: '1997-10-31'
          gender: MALE
          blood_type: O+
      properties:
        id:
          type: string
          description: Unique identifier for the given user.
          format: uuid
          example: aaaa1111-aaaa-1111-aaaa-1111aaaa1111
        name:
          type: string
          example: Bob Schweigner
        nik:
          type: string
          example: '1010103110970002'
          pattern: '[0-9]{16}'
        phone:
          type: string
          example: '+6288888888888'
        address:
          type: string
          example: 'North Way Street, Antartica Regency'
        dob:
          type: string
          description: Set to true if the user's email has been verified.
          format: date
          example: '1997-10-31'
        gender:
          type: string
          description: The date that the user was created.
          enum:
            - MALE
            - FEMALE
          example: MALE
        blood_type:
          type: string
          enum:
            - A
            - B
            - O
            - AB
            - A+
            - A-
            - B+
            - B-
            - O+
            - O-
            - AB+
            - AB-
          example: AB+
      required:
        - id
        - name
        - nik
        - phone
        - dob
    Polyclinic:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: General
    Doctor:
      type: object
      example:
        doctor:
          id: adf55661-dumm-dumm-dumm-dummycreated
          name: dr. Capstone
          nip: '839182'
          sip: SIP.2019.939.11.83
          polyclinic:
            id: 1
            name: General
          address: 'North Way Street, Antartica Regency'
          dob: '1991-09-13'
          gender: MALE
          email: capstone.doctor@example.com
      properties:
        id:
          type: string
        name:
          type: string
        nip:
          type: string
        sip:
          type: string
        polyclinic:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        address:
          type: string
        dob:
          type: string
        gender:
          type: string
        email:
          type: string
    Nurse:
      type: object
      example:
        id: adf55661-dumm-dumm-dumm-dummycreated
        name: Capstone Nurse
        nip: '839182'
        sip: SIP.2019.939.11.83
        polyclinic:
          id: 1
          name: General
        address: 'North Way Street, Antartica Regency'
        dob: '1991-09-13'
        gender: MALE
        email: capstone.nurse@example.com
      properties:
        id:
          type: string
        name:
          type: string
        nip:
          type: string
        sip:
          type: string
        polyclinic:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        address:
          type: string
        dob:
          type: string
        gender:
          type: string
        email:
          type: string
    Admin:
      type: object
      example:
        id: addf1281-dumm-dumm-dumm-dummycreated
        name: Admin Capstone
        nip: '8329191'
        email: capstone.admin@example.com
      properties:
        id:
          type: string
        name:
          type: string
        nip:
          type: string
        email:
          type: string
    Queue:
      title: Queue
      x-stoplight:
        id: xh0t1u0aqp0k4
      type: object
      example:
        id: 63fb1473-1a8e-4e44-afe5-c74a79260a3e
        patient:
          name: px.capstone
          gender: MALE
        polyclinic:
          id: 1
          name: General
        queue_number: 10
        queue_date: '2022-06-14'
        service_done_at: ''
      properties:
        id:
          type: string
        patient:
          type: object
          properties:
            name:
              type: string
            gender:
              type: string
        polyclinic:
          type: object
          properties:
            id:
              type: number
            name:
              type: string
        queue_number:
          type: number
        queue_date:
          type: string
        service_done_at:
          type: string
    MedicalRecord:
      type: object
      description: Model of Medical Record.
      properties:
        id:
          type: string
          example: 899cc146-3cff-45ce-bc41-32515de0c882
        patient_status:
          type: string
          enum:
            - OUTPATIENT
            - REFERRED
          example: OUTPATIENT
        symptoms:
          type: string
          example: fever
        icd10_code:
          type: string
          example: A750
        icd10_description:
          type: string
          example: Epidemic louse-borne typhus fever due to Rickettsia prowazekii
        suggestions:
          type: string
          example: bed rest 10 days
        patient:
          type: object
          properties:
            id:
              type: string
              example: 516a962a-802f-41f5-a2e0-c315146ad2d4
            name:
              type: string
              example: capstone px
            nik:
              type: string
              example: '3515001111110001'
            phone:
              type: string
              example: 0882000000xx
            address:
              type: string
              example: 'North Way Street, Antartica Regency'
            dob:
              type: string
              example: '1997-08-10'
            age:
              type: integer
              example: 12
            gender:
              type: string
              example: MALE
            blood_type:
              type: string
              example: O+
        doctor:
          type: object
          properties:
            id:
              type: string
              example: 8d01edf9-72ca-40b4-a1dd-20b614d597e7
            name:
              type: string
              example: dr. Capstone X
            nip:
              type: string
              example: 2015 090318 89
            sip:
              type: string
              example: SIP.89173.2015.12
            gender:
              type: string
              enum:
                - MALE
                - FEMALE
        polyclinic:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: General
    Prescription:
      type: object
      properties:
        id:
          type: string
          example: 899cc146-3cff-45ce-bc41-32515de0c882
        name:
          type: string
          example: Paracetamol 500mg
        quantity:
          type: integer
          example: 10
        dosage:
          type: string
          example: 3x1
        preparatory:
          type: string
          example: tablet
        description:
          type: string
          example: after meals
      description: Model of Prescription
    ICD10:
      type: object
      properties:
        name:
          type: string
          example: A70
        description:
          type: string
          example: Chlamydia psittaci infections
  responses:
    200_Dashboard:
      description: Example response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Meta_200OK'
              - type: object
                properties:
                  data:
                    type: object
                    properties:
                      total:
                        type: integer
                        example: 11
    200_PatientDetail:
      description: Example response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Meta_200OK'
              - type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Patient'
    200_PolyclinicDetail:
      description: Example response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Meta_200OK'
              - type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Polyclinic'
    200_ICD10List:
      description: Example response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Meta_200OK'
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ICD10'
    200_Prescription:
      description: example response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Meta_200OK'
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Prescription'
    204_NoContent:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Meta_204NoContent'
    400_BadRequest:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Meta_400BadRequest'
    401_Unauthorized:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Meta_401Unauthorized'
    403_Forbidden:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Meta_403Forbidden'
    404_NotFound:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Meta_404NotFound'
    500_InternalServerError:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Meta_500InternalServerError'
    501_Unimplemented:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Meta_501Unimplemented'
    200_PatientList:
      description: Example response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Meta_200OK'
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Patient'
    200_PolyclinicList:
      description: Example response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Meta_200OK'
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Polyclinic'
    200_DoctorDetail:
      description: Example response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Meta_200OK'
              - type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Doctor'
    400_ICD10BadRequest:
      description: Example response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Meta_400BadRequest'
              - type: object
                properties:
                  data:
                    type: object
                    properties:
                      reason:
                        type: string
                        example: must provide at least 2 characters
    200_DoctorList:
      description: Example response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Meta_200OK'
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Doctor'
    201_CreatePatient:
      description: Example response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Meta_201Created'
              - type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: aaee1234-dumm-dumm-dumm-dummycreated
    201_CreatePolyclinic:
      description: Example response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Meta_201Created'
              - type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
    201_CreateDoctor:
      description: Example response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Meta_201Created'
              - type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: aaee1234-dumm-dumm-dumm-dummycreated
    201_CreateNurse:
      description: Example response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Meta_201Created'
              - type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: aaee1234-dumm-dumm-dumm-dummycreated
    201_CreateAdmin:
      description: Example response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Meta_201Created'
              - type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: aaee1234-dumm-dumm-dumm-dummycreated
    200_NurseList:
      description: Example response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Meta_200OK'
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Nurse'
    200_NurseDetail:
      description: Example response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Meta_200OK'
              - type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Nurse'
    200_AdminList:
      description: Example response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Meta_200OK'
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Admin'
    200_AdminDetail:
      description: Example response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Meta_200OK'
              - type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Admin'
    200_QueueList:
      description: Example response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Meta_200OK'
              - type: object
                properties:
                  data:
                    type: array
                    nullable: true
                    items:
                      $ref: '#/components/schemas/Queue'
    201_CreateQueue:
      description: Example response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Meta_201Created'
              - type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: aaee1234-dumm-dumm-dumm-dummycreated
    201_CreateMedicalRecord:
      description: Example response
      content:
        application/json:
          schema:
            x-examples:
              example-1:
                meta:
                  status: 201
                  message: Created
                data:
                  id: abeee53c-ccf3-47c8-8cdd-dd8aea2410bf
            allOf:
              - $ref: '#/components/schemas/Meta_201Created'
              - type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: abeee53c-ccf3-47c8-8cdd-dd8aea2410bf
    200_MedicalRecordList:
      description: Example list of medical record response.
      content:
        application/json:
          schema:
            x-examples:
              example-1:
                meta:
                  status: 200
                  message: OK
                data:
                  - id: 899cc146-3cff-45ce-bc41-32515de0c882
                    symptoms: panas
                    icd10_code: A750
                    icd10_description: Epidemic louse-borne typhus fever due to Rickettsia prowazekii
                    suggestions: ketemu dia
                    patient:
                      id: 516a962a-802f-41f5-a2e0-c315146ad2d4
                      name: capstone
                      nik: '241092980'
                      phone: '825020882'
                      address: 'North Way Street, Antartica Regency'
                      dob: '1997-08-10T07:00:00+07:00'
                      age: 24
                      gender: MALE
                      blood_type: A
                    doctor:
                      id: 8d01edf9-72ca-40b4-a1dd-20b614d597e7
                      name: dr. Capstone X
                      nip: 2015 028171 45
                      sip: SIP.89173.2015.12
                      gender: MALE
                    polyclinic:
                      id: 2
                      name: General
                  - id: abeee53c-ccf3-47c8-8cdd-dd8aea2410bf
                    symptoms: panas
                    icd10_code: A740
                    icd10_description: Chlamydial conjunctivitis
                    suggestions: ketemu dia
                    patient:
                      id: 516a962a-802f-41f5-a2e0-c315146ad2d4
                      name: capstone
                      nik: '241092980'
                      phone: '825020882'
                      address: 'North Way Street, Antartica Regency'
                      dob: '1997-08-10T07:00:00+07:00'
                      age: 24
                      gender: MALE
                      blood_type: A
                    doctor:
                      id: 8d01edf9-72ca-40b4-a1dd-20b614d597e7
                      name: dr. Capstone X
                      nip: 2015 028171 45
                      sip: SIP.89173.2015.12
                      gender: MALE
                    polyclinic:
                      id: 2
                      name: General
            allOf:
              - $ref: '#/components/schemas/Meta_200OK'
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/MedicalRecord'
    200_MedicalRecordDetail:
      description: Example response
      content:
        application/json:
          schema:
            x-examples:
              example-1:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 899cc146-3cff-45ce-bc41-32515de0c882
                  symptoms: panas
                  icd10_code: A750
                  icd10_description: Epidemic louse-borne typhus fever due to Rickettsia prowazekii
                  suggestions: ketemu dia
                  patient:
                    id: 516a962a-802f-41f5-a2e0-c315146ad2d4
                    name: capstone
                    nik: '241092980'
                    phone: '825020882'
                    address: 'North Way Street, Antartica Regency'
                    dob: '1997-08-10T07:00:00+07:00'
                    age: 24
                    gender: MALE
                    blood_type: A
                  doctor:
                    id: 8d01edf9-72ca-40b4-a1dd-20b614d597e7
                    name: dr. Capstone X
                    nip: 2015 028171 45
                    sip: SIP.89173.2015.12
                    gender: MALE
                  polyclinic:
                    id: 2
                    name: General
            allOf:
              - $ref: '#/components/schemas/Meta_200OK'
              - type: object
                properties:
                  data:
                    $ref: '#/components/schemas/MedicalRecord'
    201_CreatePrescription:
      description: Example Response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Meta_201Created'
              - type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 899cc146-3cff-45ce-bc41-32515de0c882
  requestBodies:
    Login:
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
          examples:
            doctor:
              value:
                email: capstone.doctor@example.com
                password: test1234
            nurse:
              value:
                email: capstone.nurse@example.com
                password: test1234
            admin:
              value:
                email: capstone.admin@example.com
                password: test1234
      description: ''
    NewPatient:
      content:
        application/json:
          schema:
            type: object
            x-examples:
              example-1:
                id: aaaa1111-2222-3333-4444-55556666aaa1
                name: Alice Calbert
                nik: '1035017110970001'
                phone: alicecalbert@example.com
                address: 'North Way Street, Antartica Regency'
                dob: '1997-10-31'
                gender: FEMALE
                blood_type: A+
            properties:
              name:
                type: string
              nik:
                type: string
              phone:
                type: string
              address:
                type: string
              dob:
                type: string
              gender:
                type: string
              blood_type:
                type: string
          examples:
            alice-calbert:
              value:
                name: Alice Calbert
                nik: '1035017110970001'
                phone: alicecalbert@example.com
                address: 'North Way Street, Antartica Regency'
                dob: '1997-10-31'
                gender: FEMALE
                blood_type: A+
    NewPolyclinic:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: General
    ExistingPolyclinic:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: General
    NewDoctor:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              nip:
                type: string
              sip:
                type: string
              polyclinic_id:
                type: integer
              address:
                type: string
              dob:
                type: string
              gender:
                type: string
              email:
                type: string
              password:
                type: string
            x-examples:
              example-1:
                name: dr. Capstone
                nip: '839182'
                sip: SIP.2019.939.11.83
                polyclinic_id: 1
                address: 'North Way Street, Antartica Regency'
                dob: '1991-09-13'
                gender: MALE
                email: capstone.doctor@example.com
                password: test1234
          examples:
            doctor:
              value:
                name: dr. Capstone
                nip: '839182'
                sip: SIP.2019.939.11.83
                polyclinic_id: 1
                address: 'North Way Street, Antartica Regency'
                dob: '1991-09-13'
                gender: MALE
                email: capstone.doctor@example.com
                password: test1234
    ExistingDoctor:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              nip:
                type: string
              sip:
                type: string
              polyclinic_id:
                type: integer
              address:
                type: string
              dob:
                type: string
              gender:
                type: string
            x-examples:
              example-1:
                name: dr. Capstone
                nip: '839182'
                sip: SIP.2019.939.11.83
                polyclinic_id: 1
                address: 'North Way Street, Antartica Regency'
                dob: '1991-09-13'
                gender: MALE
          examples:
            doctor:
              value:
                name: dr. Capstone
                nip: '839182'
                sip: SIP.2019.939.11.83
                polyclinic_id: 1
                address: 'North Way Street, Antartica Regency'
                dob: '1991-09-13'
                gender: MALE
    ExistingPatient:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              nik:
                type: string
              phone:
                type: string
              address:
                type: string
              dob:
                type: string
              gender:
                type: string
              blood_type:
                type: string
            x-examples:
              example-1:
                name: Alice Calbert
                nik: '1035017110970001'
                phone: alicecalbert@example.com
                address: 'North Way Street, Antartica Regency'
                dob: '1997-10-31'
                gender: FEMALE
                blood_type: A+
          examples:
            alice-calbert:
              value:
                name: Alice Calbert
                nik: '1035017110970001'
                phone: alicecalbert@example.com
                address: 'North Way Street, Antartica Regency'
                dob: '1997-10-31'
                gender: FEMALE
                blood_type: A+
    NewNurse:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              nip:
                type: string
              sip:
                type: string
              polyclinic_id:
                type: integer
              address:
                type: string
              dob:
                type: string
              gender:
                type: string
              email:
                type: string
              password:
                type: string
            x-examples:
              example-1:
                name: dr. Capstone
                nip: '839182'
                sip: SIP.2019.939.11.83
                polyclinic_id: 1
                address: 'North Way Street, Antartica Regency'
                dob: '1991-09-13'
                gender: MALE
                email: capstone.doctor@example.com
                password: test1234
          examples:
            capstone-nurse:
              value:
                name: Capstone Nurse
                nip: '839182'
                sip: SIP.2019.939.11.83
                polyclinic_id: 1
                address: 'North Way Street, Antartica Regency'
                dob: '1991-09-13'
                gender: MALE
                email: capstone.nurse@example.com
                password: test1234
    ExistingNurse:
      content:
        application/json:
          schema:
            type: object
            x-examples:
              example-1:
                name: Capstone Nurse
                nip: '839182'
                sip: SIP.2019.939.11.83
                polyclinic_id: 1
                address: 'North Way Street, Antartica Regency'
                dob: '1991-09-13'
                gender: MALE
                email: capstone.nurse@example.com
                password: test1234
            properties:
              name:
                type: string
              nip:
                type: string
              sip:
                type: string
              polyclinic_id:
                type: integer
              address:
                type: string
              dob:
                type: string
              gender:
                type: string
          examples:
            capstone-nurse:
              value:
                name: Capstone Nurse
                nip: '839182'
                sip: SIP.2019.939.11.83
                polyclinic_id: 1
                address: 'North Way Street, Antartica Regency'
                dob: '1991-09-13'
                gender: MALE
    NewAdmin:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              nip:
                type: string
              email:
                type: string
              password:
                type: string
            x-examples:
              example-1:
                name: Admin Capstone
                nip: 2022 128903 65
                email: admin.capstone@example.com
                password: thestrongestpassword
          examples:
            admin-capstone:
              value:
                name: Admin Capstone
                nip: 2022 128903 65
                email: admin.capstone@example.com
                password: thestrongestpassword
    ExistingAdmin:
      content:
        application/json:
          schema:
            type: object
            x-examples:
              example-1:
                name: Admin Capstone
                nip: 2022 128903 65
                email: admin.capstone@example.com
                password: thestrongestpassword
            properties:
              name:
                type: string
              nip:
                type: string
          examples:
            admin-capstone:
              value:
                name: Admin Capstone
                nip: 2022 128903 65
    NewQueue:
      content:
        application/json:
          schema:
            type: object
            properties:
              patient_id:
                type: string
              polyclinic_id:
                type: number
              patient_status:
                type: string
              daily_queue_date:
                type: string
          example:
            patient_id: 63fb1473-1a8e-4e44-afe5-c74a79260a3e
            polyclinic_id: 1
            patient_status: OUTPATIENT
            daily_queue_date: '2022-06-15'
    ExistingQueue:
      content:
        application/json:
          schema:
            type: object
            properties:
              patient_id:
                type: string
              polyclinic_id:
                type: integer
              patient_status:
                type: string
              daily_queue_date:
                type: string
              service_done_at:
                type: string
          example:
            patient_id: 63fb1473-1a8e-4e44-afe5-c74a79260a3e
            polyclinic_id: 1
            patient_status: OUTPATIENT
            daily_queue_date: '2022-06-15'
            service_done_at: '2022-06-15 09:00:00'
    NewMedicalRecord:
      content:
        application/json:
          schema:
            type: object
            x-examples:
              example-1:
                symptoms: panas
                icd10_code: A740
                suggestions: ketemu dia
                patient_id: 516a962a-802f-41f5-a2e0-c315146ad2d4
                polyclinic_id: 2
            properties:
              patient_status:
                type: string
                enum:
                  - OUTPATIENT
                  - REFERRED
                example: OUTPATIENT
              symptoms:
                type: string
                example: 'fever, sneeze'
              icd10_code:
                type: string
                example: A750
              suggestions:
                type: string
                example: full rest 10 days
              patient_id:
                type: string
                example: 516a962a-802f-41f5-a2e0-c315146ad2d4
              polyclinic_id:
                type: integer
                example: 1
      description: Request body to create new medical record.
    NewPrescription:
      content:
        application/json:
          schema:
            type: object
            properties:
              medical_record_id:
                type: string
                example: 516a962a-802f-41f5-a2e0-c315146ad2d4
              name:
                type: string
                example: Paracetamol 500mg
              quantity:
                type: integer
                example: 10
              dosage:
                type: string
                example: 3x1
              preparatory:
                type: string
                example: tablet
              description:
                type: string
                example: after meals
      description: Request body to create new prescription
    ExistingPrescription:
      content:
        application/json:
          schema:
            properties:
              name:
                type: string
                example: Paracetamol 500mg
              quantity:
                type: integer
                example: 10
              dosage:
                type: string
                example: 3x1
              preparatory:
                type: string
                example: tablet
              description:
                type: string
                example: after meals
      description: Request body to update prescription
    ExistingMedicalRecord:
      content:
        application/json:
          schema:
            type: object
            properties:
              patient_status:
                type: string
                enum:
                  - OUTPATIENT
                  - REFERRED
                example: OUTPATIENT
              symptoms:
                type: string
                example: fever
              icd10_code:
                type: string
                example: A750
              suggestions:
                type: string
                example: bed rest
      description: ''
