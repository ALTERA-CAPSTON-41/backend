// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	account "clinic-api/src/app/account"

	mock "github.com/stretchr/testify/mock"

	testing "testing"

	types "clinic-api/src/types"
)

// Services is an autogenerated mock type for the Services type
type Services struct {
	mock.Mock
}

// AttemptLogin provides a mock function with given fields: domain
func (_m *Services) AttemptLogin(domain account.Domain) (string, types.UserRoleEnum, error) {
	ret := _m.Called(domain)

	var r0 string
	if rf, ok := ret.Get(0).(func(account.Domain) string); ok {
		r0 = rf(domain)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 types.UserRoleEnum
	if rf, ok := ret.Get(1).(func(account.Domain) types.UserRoleEnum); ok {
		r1 = rf(domain)
	} else {
		r1 = ret.Get(1).(types.UserRoleEnum)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(account.Domain) error); ok {
		r2 = rf(domain)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// NewServices creates a new instance of Services. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewServices(t testing.TB) *Services {
	mock := &Services{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
