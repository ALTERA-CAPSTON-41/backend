// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	testing "testing"

	mock "github.com/stretchr/testify/mock"
)

// Services is an autogenerated mock type for the Services type
type Services struct {
	mock.Mock
}

// GetTotal provides a mock function with given fields: feature
func (_m *Services) GetTotal(feature string) (int, error) {
	ret := _m.Called(feature)

	var r0 int
	if rf, ok := ret.Get(0).(func(string) int); ok {
		r0 = rf(feature)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(feature)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewServices creates a new instance of Services. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewServices(t testing.TB) *Services {
	mock := &Services{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
